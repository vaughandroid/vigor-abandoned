apply plugin: 'com.android.application'
apply plugin: 'com.neenbedankt.android-apt'
apply from: "${rootDir}/buildsystem/retrolambda.gradle"
apply plugin: 'de.mobilej.unmock'
apply plugin: 'com.getkeepsafe.dexcount'

android {
  def config = rootProject.ext.androidConfig

  compileSdkVersion config.compileSdkVersion
  buildToolsVersion config.buildToolsVersion

  compileOptions {
    sourceCompatibility config.sourceCompatibility
    targetCompatibility config.targetCompatibility
  }

  defaultConfig {
    applicationId "me.vaughandroid.vigor"
    minSdkVersion config.minSdkVersion
    targetSdkVersion config.targetSdkVersion
    versionCode 1
    versionName "1.0"

    vectorDrawables.useSupportLibrary = true
    testInstrumentationRunner 'vaughandroid.vigor.TestApplicationTestRunner'
  }

  buildTypes {
    debug {
      minifyEnabled false
      applicationIdSuffix ".debug"
    }
    release {
      minifyEnabled true
      proguardFiles getDefaultProguardFile('proguard-android.txt'),
          'proguard-rules.pro',
          "${rootDir}/buildsystem/proguard/firebase.pro",
          "${rootDir}/buildsystem/proguard/retrolambda.pro"
    }
  }

  packagingOptions {
    for (fileName in rootProject.ext.packagingExclusions) {
      exclude fileName
    }
  }
}

unMock {
  // Where to download the 'real' Android.jar from. We use the version of Robolectric closest to our minSdkVersion
  downloadFrom 'https://oss.sonatype.org/content/groups/public/org/robolectric/android-all/4.3_r2-robolectric-0/android-all-4.3_r2-robolectric-0.jar'
}

dependencies {
  def javaLibs = rootProject.ext.javaLibs
  def androidLibs = rootProject.ext.androidLibs
  def javaTestLibs = rootProject.ext.javaTestLibs
  def androidTestLibs = rootProject.ext.androidTestLibs

  provided javaLibs.autoValue
  apt javaLibs.autoValueWith
  compile javaLibs.dagger
  apt javaLibs.daggerCompiler
  compile javaLibs.guava
  provided javaLibs.javaxAnnotation
  compile javaLibs.rxJava
  compile javaLibs.slf4j

  compile androidLibs.androidAnnotations
  compile androidLibs.appCompat
  compile androidLibs.butterKnife
  apt androidLibs.butterKnifeCompiler
  compile androidLibs.design
  compile androidLibs.firebaseAuth
  compile androidLibs.firebaseCore
  compile androidLibs.firebaseConfig
  compile androidLibs.firebaseDatabase
  debugCompile androidLibs.leakCanary
  releaseCompile androidLibs.leakCanaryNoOp
  compile androidLibs.rxAndroid
  compile androidLibs.rxBinding
  compile androidLibs.rxBindingAppCompatV7
  compile androidLibs.rxBindingDesign
  compile androidLibs.rxBindingSupportV4
  compile androidLibs.rxBindingRecyclerViewV7
  compile androidLibs.rxLifecycle
  compile androidLibs.rxLifecycleComponents
  compile androidLibs.slf4jAndroid

  testCompile javaTestLibs.assertJ
  testCompile javaTestLibs.jUnit
  testCompile javaTestLibs.mockito

  androidTestCompile javaTestLibs.assertJ
  androidTestApt javaLibs.daggerCompiler
  androidTestCompile androidTestLibs.dexmaker
  androidTestCompile androidTestLibs.dexmakerMockito
  androidTestCompile androidTestLibs.dexmakerDx
  androidTestCompile androidTestLibs.espresso
  androidTestCompile androidTestLibs.espressoIntents
  androidTestCompile javaTestLibs.jUnit
  androidTestCompile javaTestLibs.mockito
  androidTestCompile androidTestLibs.testSupportRules
  androidTestCompile androidTestLibs.testSupportRunner

  // Fix dependency version conflicts.
  androidTestCompile androidLibs.androidAnnotations
}

// For some reason, this has to go at the bottom of the script.
apply plugin: 'com.google.gms.google-services'
